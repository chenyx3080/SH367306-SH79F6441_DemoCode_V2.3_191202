C51 COMPILER V9.00   MAIN                                                                  12/09/2019 17:56:03 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\Main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\Main.c LARGE OPTIMIZE(7,SPEED) BROWSE INCDIR(.\header) DEBUG OBJECT
                    -EXTEND PRINT(.\output\Main.lst) OBJECT(.\output\Main.obj)

line level    source

   1          /********************************************************************************
   2          Copyright (C), Sinowealth Electronic. Ltd.
   3          Author:         Sino
   4          Version:        V0.0
   5          Date:           2014/05/30
   6          History:
   7                  V0.0            2014/05/30               Preliminary
   8          ********************************************************************************/
   9          #include "system.h"
  10          
  11          
  12          void main(void)
  13          {
  14   1              Initial();                                                              //Initialize the system
  15   1              
  16   1              while(1)
  17   1              {
  18   2                      RSTSTAT = 0x00;
  19   2              
  20   2                      if((ucResetFlag==0x12) && bUartSndAckFlg)               //Software reset occurs, and ended UART communication
  21   2                      {
  22   3                              EA = 0;
  23   3                              ResetInit();                                    //Reset MCU
  24   3                      }
  25   2      
  26   2                      if(bISPFlg && bUartSndAckFlg)
  27   2                      {
  28   3                              bISPFlg = 0;
  29   3                              AFE_WDT_DISABLE;
  30   3                              ISPProcess();
  31   3                      }
  32   2                      
  33   2                      if(bWakeupFlg)                                          //The charger / load, keys, communication can wake up the system
  34   2                      {
  35   3                              bWakeupFlg = 0;
  36   3                              WakeUpProcess();                                //System to be awakened
  37   3                      }
  38   2      
  39   2                      if(bKeyFlg)                                                     //timeinterrupt will dectect keyprocess(),  if detected effective key
  40   2                      {
  41   3                  bKeyFlg = 0;
  42   3                              KeyProcess();
  43   3                      }
  44   2      
  45   2                      if(bAlarmFlg)
  46   2                      {
  47   3                              bAlarmFlg = 0;
  48   3                              AlarmProcess();
  49   3                      }
  50   2      
  51   2                      if(bCADCFlg)
  52   2                      {
  53   3                              bCADCFlg = 0;
  54   3                              CurrProcess();                                  //Calculate the current value and determines the state of charge and discharge
C51 COMPILER V9.00   MAIN                                                                  12/09/2019 17:56:03 PAGE 2   

  55   3                      }
  56   2      
  57   2                      if(bVADCFlg)
  58   2                      {                       
  59   3                  bVADCFlg = 0;
  60   3                              BatteryInfoManage();                    //Get battery voltage and temperature information
  61   3      
  62   3                              BalManage();                                    //Process external voltage balance
  63   3      
  64   3                              CellOpenProcess();
  65   3      
  66   3                              BalProcess();
  67   3                      }
  68   2      
  69   2                      if(bCalibrationFlg)
  70   2                      {
  71   3                              bCalibrationFlg = 0;
  72   3                              CaliProcess();                                  //PC calibration
  73   3                      }
  74   2      
  75   2                      if(bUpdataFlashFlg)
  76   2                      {
  77   3                              bUpdataFlashFlg = 0;
  78   3                              FlashProcess();
  79   3                      }
  80   2      
  81   2                      if(bEnEEPRomBK && bE2PProcessFlg)
  82   2                      {
  83   3                              bE2PProcessFlg = 0;
  84   3                              E2PRomBKProcess();
  85   3                      }
  86   2      
  87   2                      if(bTimer25msFlg)
  88   2                      {
  89   3                  bTimer25msFlg = 0;                                                            
  90   3                              ProtectProcess();                               //Detection of battery charge and discharge cut-off voltage
  91   3              }
  92   2      
  93   2                      if(bTimer1sFlg)                                         //timer is 1s
  94   2                      {
  95   3                              bTimer1sFlg = 0;
  96   3      
  97   3                              RamCheckProcess();              //Detect the xdata block data                   
  98   3      
  99   3                              LEDPowerOff();                                  //When the LED display 4s, turn off the LED
 100   3      
 101   3                              VolProcess();                                   //Detection of battery charge and discharge cut-off voltage
 102   3      
 103   3                              GaugeManage();                                  //Calculate the battery charge and discharge capacity
 104   3      
 105   3                              AFERamCheck();                  //Check AFE Register            
 106   3      
 107   3                              WriteFlashCheck();
 108   3                              
 109   3                  if(bEnEEPRomBK)
 110   3                  {
 111   4                              E2PRomBKCheck();                        //Detecting whether to backup EEPRom
 112   4                  }
 113   3      
 114   3                              LowPowerCheck();                                //Detecting whether to enter a low-power
 115   3                                      
 116   3                      }
C51 COMPILER V9.00   MAIN                                                                  12/09/2019 17:56:03 PAGE 3   

 117   2                      
 118   2                      LowPowerProcess();
 119   2              }
 120   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    171    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
