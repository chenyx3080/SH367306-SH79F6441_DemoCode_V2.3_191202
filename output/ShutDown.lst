C51 COMPILER V9.00   SHUTDOWN                                                              12/09/2019 17:56:04 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SHUTDOWN
OBJECT MODULE PLACED IN .\output\ShutDown.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\ShutDown.c LARGE OPTIMIZE(7,SPEED) BROWSE INCDIR(.\header) DEBUG OB
                    -JECTEXTEND PRINT(.\output\ShutDown.lst) OBJECT(.\output\ShutDown.obj)

line level    source

   1          /********************************************************************************
   2          Copyright (C), Sinowealth Electronic. Ltd.
   3          Author:         Sino
   4          Version:        V0.0
   5          Date:           2014/05/30
   6          History:
   7                  V0.0            2014/05/30               Preliminary
   8          ********************************************************************************/
   9          #include "system.h"
  10          #include "Calibrate.h"
  11          
  12          
  13          extern void InitClk(void);
  14          
  15          /*******************************************************************************
  16          Function: WakeUpProcess(void)
  17          Description:  
  18          Input:          
  19          Output: 
  20          Others:
  21          *******************************************************************************/
  22          void WakeUpProcess(void)
  23          {
  24   1              bWakeupFlg = 0;
  25   1              if(bIdleFlg || bPDFlg)
  26   1              {
  27   2                      InitClk();
  28   2      
  29   2                      bPDFlg = 0;
  30   2                      bIdleFlg = 0;
  31   2                      ucIdleTimerCnt = 0;
  32   2                      ucPDTimerCnt = 0;                
  33   2                      ucTimer3Cnt = 0;
  34   2      
  35   2                      Delay1ms(1);
  36   2                      ENTWI = 1;
  37   2                      InitIRQ();
  38   2      
  39   2                      REG.AFEINTEN = 0x6C;                                    //Enable SC, OV, CD
  40   2                      TwiWriteAFE(AFE_INT_EN, &REG.AFEINTEN);
  41   2              
  42   2                      REG.AFESCONF1 |= 0x10;                                  //Enable WDT
  43   2                      TwiWriteAFE(AFE_SCONF1, &REG.AFESCONF1);
  44   2              }
  45   1      
  46   1                      ucIdleTimerCnt = 0;
  47   1                      ucPDTimerCnt = 0;
  48   1                      bPCSleepFlg = 0;
  49   1                      bIdleFlg = 0; 
  50   1                      ucUartTimeoutCnt = 0;           
  51   1      }
  52          
  53          
  54          /*******************************************************************************
C51 COMPILER V9.00   SHUTDOWN                                                              12/09/2019 17:56:04 PAGE 2   

  55          Function: SystemIntoPD(void)
  56          Description:  
  57          Input:          
  58          Output: 
  59          Others:
  60          *******************************************************************************/
  61          void SystemIntoPD(void)
  62          {       
  63   1              PWM2CON &= ~0x01;
  64   1              DSG1PWM = 0;
  65   1              
  66   1              bBLEOPEN = 0;
  67   1              IO_BLEPW = 1;
  68   1              
  69   1          IEN0 = 0x00;                                                        //disable Interrupt
  70   1              IEN1 = 0x00;                                            
  71   1              LEDOff;                                                             //shut down LED
  72   1      
  73   1              IntoPowerDown();        
  74   1      }
  75          
  76          
  77          /*******************************************************************************
  78          Function: SystemIntoIdle(void)
  79          Description:  
  80          Input:          
  81          Output: 
  82          Others:
  83          *******************************************************************************/
  84          void SystemIntoIdle(void)    
  85          {       
  86   1              REG.AFESCONF1 &= ~0x10;                                 //关闭WDT
  87   1              TwiWriteAFE(AFE_SCONF1, &REG.AFESCONF1);
  88   1      
  89   1              REG.AFEINTEN = 0x70;                                    //开启SC,OV,CD的Alarm功能
  90   1              TwiWriteAFE(AFE_INT_EN, &REG.AFEINTEN);
  91   1              
  92   1              LEDOff;                                                         //shut down LED
  93   1              bBLEOPEN = 0;
  94   1              IO_BLEPW = 1;
  95   1              PWM2CON &= ~0x01;
  96   1              if(bDSGMOS)
  97   1              {
  98   2                      DSG1PWM = 1;
  99   2              }
 100   1              else
 101   1              {
 102   2                      DSG1PWM = 0;
 103   2              }
 104   1      
 105   1              Delay1ms(1);
 106   1              ENTWI = 0;
 107   1              
 108   1              CLKCON &= ~0x04;                                        //Set sysclk 32kHz
 109   1              _nop_();
 110   1              _nop_();
 111   1              _nop_();
 112   1              _nop_();
 113   1              CLKCON &= ~0x08;                                        //Close  sysclk 24MHz
 114   1      
 115   1              EA = 0;
 116   1              IEN0 = 0x00;
C51 COMPILER V9.00   SHUTDOWN                                                              12/09/2019 17:56:04 PAGE 3   

 117   1              IEN1 = 0x08;                                            //Enable INT4
 118   1              IENC = 0x20;                                            //Enable INT45
 119   1              IEN0 |= 0x01;                                           //INT0                    WAKEUP
 120   1              EA = 1;
 121   1      
 122   1              IntoPD();                                                       //MCU into PD
 123   1      }
 124          
 125          
 126          /*******************************************************************************
 127          Function: LowPowerCheck(void)
 128          Description:  
 129          Input:          
 130          Output: 
 131          Others:
 132          *******************************************************************************/
 133          void LowPowerCheck(void)
 134          {
 135   1              if(bPCSleepFlg && bUartSndAckFlg)
 136   1              {
 137   2                      bPCSleepFlg = 0;
 138   2                      bPDFlg = 1;             
 139   2              }
 140   1          else if(bCTO)
 141   1          {
 142   2                      if(++ucPDTimerCnt >= E2ucDeleyLowPower)
 143   2                      {
 144   3                              ucPDTimerCnt = E2ucDeleyLowPower;
 145   3                              bPDFlg = 1;             
 146   3                      }
 147   2          }
 148   1              else if(!bLEDOpen)                                      //LED display off and then wait to enter a low-power
 149   1              {
 150   2                      if(!bCHGING && !bDSGING)
 151   2                      {
 152   3                              if(bUV)
 153   3                              {
 154   4                                      if(++ucPDTimerCnt >= E2ucDeleyLowPower)
 155   4                                      {
 156   5                                              ucPDTimerCnt = E2ucDeleyLowPower;
 157   5                                              bPDFlg = 1;             
 158   5                                      }
 159   4                              }
 160   3                              else
 161   3                              {
 162   4                      ucPDTimerCnt = 0;
 163   4                      if(!(bOTC | bUTC | bHV | bOCC | bOTD | bUTD | bUV | bOCD | bAFE_SC | bBLEOPEN))
 164   4                      {
 165   5                                      if(++ucIdleTimerCnt >= E2ucDeleyLowPower)
 166   5                                      {
 167   6                                              ucIdleTimerCnt = E2ucDeleyLowPower;
 168   6                                              bIdleFlg = 1;           
 169   6                                      }
 170   5                      }
 171   4                      else
 172   4                      {
 173   5                          ucIdleTimerCnt = 0;
 174   5                      }
 175   4                              }
 176   3                      }
 177   2                      else
 178   2                      {
C51 COMPILER V9.00   SHUTDOWN                                                              12/09/2019 17:56:04 PAGE 4   

 179   3                              ucIdleTimerCnt = 0;
 180   3                              ucPDTimerCnt = 0;
 181   3                      }
 182   2              }
 183   1              else
 184   1              {
 185   2                      ucIdleTimerCnt = 0;
 186   2                      ucPDTimerCnt = 0;
 187   2              }
 188   1      }
 189          
 190          
 191          /*******************************************************************************
 192          Function: LowPowerProcess(void)
 193          Description:  
 194          Input:          
 195          Output: 
 196          Others:
 197          *******************************************************************************/
 198          void LowPowerProcess(void)
 199          {
 200   1              if(!bIdleFlg && !bPDFlg)
 201   1              {
 202   2                      EA = 0;
 203   2                      if(!(bKeyFlg | bAlarmFlg | bCADCFlg | bCalibrationFlg | bUpdataFlashFlg | bWakeupFlg | bISPFlg | bVADCFl
             -g | bTimer1sFlg) && (ucResetFlag!=0x12))
 204   2                      {
 205   3                              EA = 1;
 206   3                              IntoIdle();
 207   3                      }
 208   2                      EA = 1;         
 209   2              }
 210   1              else if(bPDFlg)
 211   1              {
 212   2                      SystemIntoPD();
 213   2              }
 214   1              else if(bIdleFlg)
 215   1              {
 216   2                      SystemIntoIdle();
 217   2              }
 218   1      }
 219          
 220          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    403    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
