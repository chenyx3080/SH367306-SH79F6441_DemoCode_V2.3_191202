C51 COMPILER V9.00   EVENT                                                                 04/02/2019 15:12:37 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE EVENT
OBJECT MODULE PLACED IN .\output\Event.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\Event.c OPTIMIZE(7,SPEED) BROWSE INCDIR(.\header) DEBUG OBJECTEXTEN
                    -D PRINT(.\output\Event.lst) OBJECT(.\output\Event.obj)

line level    source

   1          /********************************************************************************
   2          Copyright (C), Sinowealth Electronic. Ltd.
   3          Author:         andyliu
   4          Version:        V0.0
   5          Date:           2014/05/30
   6          History:
   7                  V0.0            2014/05/30               Preliminary
   8          ********************************************************************************/
   9          #include "system.h"
  10          
  11          
  12          extern bit MTPRead(U8 RdAddr, U8 Length, U8 xdata *RdBuf);
  13          extern bit MTPWrite(U8 WrAddr, U8 Length, U8 xdata *WrBuf);
  14          extern void Delay1ms(U8 delaycnt);
  15          
  16          
  17          /*******************************************************************************
  18          Function: 
  19          Description:  
  20          Input:          
  21          Output: 
  22          Others:
  23          *******************************************************************************/
  24          bit GetAFEData(void)
  25          {
  26   1              BOOL result;
  27   1              result = MTPRead(MTP_TEMP1, sizeof(AFE), (U8 xdata *)&AFE);
  28   1              return result;
  29   1      }
  30          
  31          
  32          
  33          /*******************************************************************************
  34          Function: 
  35          Description:  
  36          Input:          
  37          Output: 
  38          Others:
  39          *******************************************************************************/
  40          void ProtectProcess(void)
  41          {
  42   1              U8 xdata TempBuf[3];
  43   1      
  44   1              if(MTPRead(MTP_BSTATUS1, 3, TempBuf))                                                   //read AFE reg 43H~45H
  45   1          {
  46   2              uiBatStatus =  ((U16)TempBuf[1]<<8) | TempBuf[0];
  47   2              uiPackStatus = (uiPackStatus&0xfff0) | (TempBuf[2]&0x0F);
  48   2              Info.BatStatus = uiBatStatus;
  49   2              Info.PackStatus = uiPackStatus;
  50   2          }
  51   1      }
  52          
  53          
  54          
C51 COMPILER V9.00   EVENT                                                                 04/02/2019 15:12:37 PAGE 2   

  55          /*******************************************************************************
  56          Function: 
  57          Description:  
  58          Input:          
  59          Output: 
  60          Others:
  61          *******************************************************************************/
  62          void CurProcess(void)
  63          {
  64   1              S16 xdata AveTemp;
  65   1      
  66   1          AveTemp =  siCurBuf[ucCadcTimeCnt];
  67   1              if(!MTPRead(MTP_ADC2, 2, (U8 xdata *)&siCurBuf[ucCadcTimeCnt]))
  68   1          {
  69   2              siCurBuf[ucCadcTimeCnt] = AveTemp;
  70   2          }
  71   1              
  72   1              if(++ucCadcTimeCnt >= 4)
  73   1              {
  74   2                      ucCadcTimeCnt = 0;
  75   2                      AveTemp = ((S32)siCurBuf[0]+siCurBuf[1]+siCurBuf[2]+siCurBuf[3]) >> 2;                  //Calculate the average current
             - four consecutive times
  76   2              
  77   2                      UART_IRQ_DISABLE;
  78   2                      Info.CurCadc = (S32)CALICUR*(AveTemp-E2siCadcZero)/E2siCadcGain;
  79   2                      UART_IRQ_ENABLE;
  80   2              } 
  81   1      
  82   1              bDSGING = 0;
  83   1              bCHGING = 0;
  84   1              if(Info.CurCadc < (-E2siDfilterCur))
  85   1              {
  86   2                      bDSGING = 1;
  87   2              }
  88   1              else if(Info.CurCadc > E2siDfilterCur)
  89   1              {
  90   2                      bCHGING = 1;            
  91   2              }
  92   1              else
  93   1              {
  94   2                      UART_IRQ_DISABLE;
  95   2                      Info.CurCadc = 0;
  96   2                      UART_IRQ_ENABLE;
  97   2              }
  98   1      }
  99          
 100          /*******************************************************************************
 101          Function: VolProcess()
 102          Description:  
 103          Input:          
 104          Output: 
 105          Others:
 106          *******************************************************************************/
 107          void VolProcess(void)
 108          {       
 109   1              if(bCHGING)
 110   1              {
 111   2                      if(!bFC)
 112   2                      {
 113   3                              if((uiCellVmax >= E2uiChgEndVol) && (Info.CurCadc <= E2uiChgEndCur))
 114   3                              {
 115   4                                      if(++ucChgEndTimeCnt >= E2ucChgEndDelay)
C51 COMPILER V9.00   EVENT                                                                 04/02/2019 15:12:37 PAGE 3   

 116   4                                      {
 117   5                                              ucChgEndRTimeCnt = 0;
 118   5                                              bFC = 1;
 119   5                                              if(bCHGEnd)                                                                     //Full charge off the charge&precharge MOS
 120   5                                              {
 121   6                                                      bCHGClosedFlg = 1;
 122   6                                                      ucMTPConfVal &= ~0x50;
 123   6                                                      MTPWrite(MTP_CONF, 1, &ucMTPConfVal);                   //Close CHG & PCHG MOS
 124   6                                              }
 125   5                                      }
 126   4                              }
 127   3                      }       
 128   2              }
 129   1              else if(bDSGING || ((uiCellVmin<E2uiChgEndVol)&&(++ucChgEndRTimeCnt>=E2ucChgEndDelay)))
 130   1              {
 131   2                      ucChgEndTimeCnt = 0;
 132   2                      if(bFC)
 133   2                      {
 134   3                              bFC = 0;
 135   3                              if(bCHGEnd && bCHGClosedFlg)
 136   3                              {
 137   4                                      bCHGClosedFlg = 0;
 138   4                                      ucMTPConfVal |= 0x50;                           //Open PCHG & CHG MOS
 139   4                                      MTPWrite(MTP_CONF, 1, &ucMTPConfVal);
 140   4                              }
 141   3                      }
 142   2              }
 143   1      
 144   1              if(bDSGING)
 145   1              {
 146   2                      if(!bFD)
 147   2                      {
 148   3                              if(uiCellVmin <= E2uiDsgEndVol)
 149   3                              {
 150   4                                      if(++ucDsgEndTimeCnt >= E2ucDsgEndDelay)
 151   4                                      {
 152   5                                              ucDsgEndRTimeCnt = 0;
 153   5                                              bFD = 1;
 154   5                                              bE2PProcessFlg = 1;                             //backup battery info when discharge end
 155   5                                              bE2PBKDsgEnd = 1;
 156   5                                              if(bDSGEnd)                                                                     //Discharge end
 157   5                                              {
 158   6                                                      bDSGClosedFlg = 1;
 159   6                                                      ucMTPConfVal &= ~0x20;                  //Close DSG MOS
 160   6                                                      MTPWrite(MTP_CONF, 1, &ucMTPConfVal);
 161   6                                              }
 162   5                                      }
 163   4                              }
 164   3                      }
 165   2              }
 166   1              else if(bCHGING || ((uiCellVmin>E2uiDsgEndVol)&&(++ucDsgEndRTimeCnt>=E2ucDsgEndDelay)))
 167   1              {
 168   2                      ucDsgEndTimeCnt = 0;
 169   2                      bFD = 0;
 170   2                      if(bDSGEnd && bDSGClosedFlg)
 171   2                      {
 172   3                              bDSGClosedFlg = 0;
 173   3                              ucMTPConfVal |= 0x20;                                   //Open DSG MOS
 174   3                              MTPWrite(MTP_CONF, 1, &ucMTPConfVal);
 175   3                      }
 176   2              }
 177   1      }
C51 COMPILER V9.00   EVENT                                                                 04/02/2019 15:12:37 PAGE 4   

 178          
 179          
 180          
 181          /*******************************************************************************
 182          Function: AFECheck()
 183          Description:  Programming mode is only for temporary use, follow Demo Board will solve the problem
 184          Input:          
 185          Output: 
 186          Others:
 187          *******************************************************************************/
 188          void AFECheck(void)
 189          {
 190   1              U8 xdata TempConf;
 191   1      
 192   1              if(MTPRead(MTP_CONF, 3, &TempConf))
 193   1              {
 194   2                      if(TempConf != ucMTPConfVal)
 195   2                      {
 196   3                              MTPWrite(MTP_CONF, 1, &ucMTPConfVal);   
 197   3                      }
 198   2              }
 199   1      }
 200          
 201          void AFEProcess(void)
 202          {
 203   1              U8 xdata Bflag=0;
 204   1              
 205   1              if(MTPRead(MTP_BFLAG2, 1, (U8 xdata*)&Bflag))                   //Read AFE REG--BFLAG2
 206   1          {    
 207   2              if((Bflag&0x20) != 0)
 208   2              {
 209   3                      bCADCFlg = 1;
 210   3              }
 211   2          
 212   2              if((Bflag&0x40) != 0)
 213   2              {
 214   3                      bWakeupFlg = 1;
 215   3              }
 216   2          }
 217   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    820    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
